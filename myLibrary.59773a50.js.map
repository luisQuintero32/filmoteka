{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,uCAGMC,EAAaC,SAASC,eAAe,uBACrCC,EAAWF,SAASC,eAAe,qBACnCE,EAAiBH,SAASC,eAAe,oBACzCG,EAAUJ,SAASK,cAAc,qBACnCC,EAAc,EACdC,EAAa,EAEjBL,EAASM,iBAAiB,SAE1B,WAEET,EAAWU,UAAUC,OAAO,gBAC5BR,EAASO,UAAUE,IAAI,gBACvB,IAAMC,EAAkBC,KAAKC,MAAMC,aAAaC,QAAQ,cAGlDC,EAAgBL,EAAgBM,KAAI,SAAAC,GACxC,OAAOC,MACL,sCAAyDC,OAAnBF,EAAQ,aAAmBE,OAARC,EAAAC,QAAQ,iBACjEC,MAAK,SAAAC,G,OAAYA,EAASC,M,OAS9B,SAASC,EAAYC,GACnB,IAAIC,EAAa,GACjBC,QAAQC,IAAId,GACTO,MAAK,SAAAQ,GACJ,IAAMC,EAAoBrB,EAAgBsB,OAC1C3B,EAXc,SAAA0B,GAClB,OAAOA,GAAqB,GAAKE,KAAKC,KAAKH,EAAoB,IAAM,C,CAUpDI,CAAYJ,GACzB,IAAMK,GAAK,EAAAC,EAAAC,eAAcZ,EAAarB,GACtCH,EAAQqC,UAAYH,EAMpB,IAJA,IACMI,EAA6B,IAAhBd,EAAoB,EADtB,IAC2BA,EAAc,GACpDe,EAAWR,KAAKS,IAFL,GAEShB,EAAwBI,EAAWE,QAEpDW,EAAIH,EAAYG,EAAIF,EAAUE,IAAK,CAC1C,IAAMC,EAAOd,EAAWa,GACE,KAAtBC,EAAKC,eACPD,EAAKC,aAAe,sBAEtB,IACMC,EAAc,GAAsB3B,OADrB,8BACe,QAAuBA,OAAjByB,EAAKG,aACzCC,EAAaJ,EAAKK,OAAOjC,KAAI,SAAAkC,G,OAASA,EAAMC,I,IAAMC,KAAK,OACvDC,EAAY,qHAI4BlC,OADfyB,EAAKU,GAAG,sFAC4BnC,OAArB2B,EAAY,WAI1B3B,OAJmCyB,EAAKW,MACrE,qLAMOpC,OAHsByB,EAAKW,MAAM,iGAGjBpC,OAAhB6B,EAAW,OAA+C7B,OAA1C,IAAIqC,KAAKZ,EAAKC,cAAcY,cAAc,2HAMpE9B,GAAc0B,C,CAGhBpD,EAAesC,UAAYZ,C,IAE5B+B,OAAM,SAAAC,G,OAASC,QAAQD,MAAMA,E,IAsClC,SAASE,IACoB/D,SAASC,eAAe,gBAChC+D,UAAY1D,C,CArFjCqB,EAAY,GA6DZvB,EAAQI,iBAAiB,SAbzB,SAAyByD,GACvB,GAA6B,OAAzBA,EAAMC,OAAOC,QAAkB,CACjC,IAAMC,EAAeH,EAAMC,OAAOF,UAC5BK,EAAkBC,SAASF,GACZ,QAAjBA,IAEF9D,EAAc+D,EACdJ,EAAMM,kBACN5C,EAAYrB,G,KAOlBN,SACGC,eAAe,sBACfO,iBAAiB,QAASgE,EAAA3E,EAAA,CAAA2E,EAAAC,GAAAC,MAAA,SAAAC,I,uEACrBrE,EAAc,GAAC,C,sBACjBA,I,SACMqB,EAAY2C,SAAShE,I,OAC3ByD,I,4CAIN/D,SACGC,eAAe,sBACfO,iBAAiB,QAASgE,EAAA3E,EAAA,CAAA2E,EAAAC,GAAAC,MAAA,SAAAC,I,uEACrBrE,EAAcC,GAAU,C,sBAC1BD,I,SACMqB,EAAY2C,SAAShE,I,OAC3ByD,EAAsBO,SAAShE,I","sources":["src/queue.js"],"sourcesContent":["import { API_KEY } from './config';\nimport { generatePages } from './pagination';\n\nconst watchedBtn = document.getElementById('watched-movies--btn');\nconst queueBtn = document.getElementById('queue-movies--btn');\nconst queueContainer = document.getElementById('movies-container');\nconst ulPages = document.querySelector('.pagination__page');\nlet currentPage = 1;\nlet totalPages = 1;\n\nqueueBtn.addEventListener('click', renderQueueMovies);\n\nfunction renderQueueMovies() {\n\n  watchedBtn.classList.remove('current--btn');\n  queueBtn.classList.add('current--btn')\n  const queueMoviesList = JSON.parse(localStorage.getItem('queueList'));\n  let moviesHTML = '';\n\n  const fetchPromises = queueMoviesList.map(movieID => {\n    return fetch(\n      `https://api.themoviedb.org/3/movie/${movieID}?api_key=${API_KEY}&language=en`\n    ).then(response => response.json());\n  });\n\n  const total_pages = queueMoviesLength => {\n    return queueMoviesLength >= 20 ? Math.ceil(queueMoviesLength / 20) : 1;\n  };\n\n  fetchMovies(1);\n\n  function fetchMovies(currentPage) {\n    let moviesHTML = '';\n    Promise.all(fetchPromises)\n      .then(moviesData => {\n        const queueMoviesLength = queueMoviesList.length;\n        totalPages = total_pages(queueMoviesLength);\n        const li = generatePages(currentPage, totalPages);\n        ulPages.innerHTML = li;\n\n        const pageSize = 20;\n        const startIndex = currentPage === 1 ? 0 : (currentPage - 1) * pageSize;\n        const endIndex = Math.min(currentPage * pageSize, moviesData.length);\n\n        for (let i = startIndex; i < endIndex; i++) {\n          const data = moviesData[i];\n          if (data.release_date === '') {\n            data.release_date = 'Sin aÃ±o registrado';\n          }\n          const baseImageUrl = 'https://image.tmdb.org/t/p/';\n          const moviePoster = `${baseImageUrl}w500${data.poster_path}`;\n          const genreNames = data.genres.map(genre => genre.name).join(' | ');\n          const movieHTML = `\n            <div class=\"photo-card\">\n              <div class=\"info\">\n                <a onclick=\"openModal('${data.id}')\" class=\"info__poster\">\n                  <img class=\"info__poster--img\" src=\"${moviePoster}\" alt=\"${data.title\n            }\" loading=\"lazy\" width=\"100px\" height=\"100px\" id=\"info__poster--img\" />\n                </a>\n                <h3 class=\"info__title\">\n                  <strong class=\"title\">${data.title}</strong>\n                </h3>\n                <p class=\"info__genre\">\n                  ${genreNames} | ${new Date(data.release_date).getFullYear()}\n                </p>\n                <p class=\"info-item\"></p>\n              </div>\n            </div>\n          `;\n          moviesHTML += movieHTML;\n        }\n\n        queueContainer.innerHTML = moviesHTML;\n      })\n      .catch(error => console.error(error));\n  }\n\n  function handlePageClick(event) {\n    if (event.target.tagName === 'LI') {\n      const clickedValue = event.target.innerText;\n      const clickedValueInt = parseInt(clickedValue);\n      if (clickedValue === '...') {\n      } else {\n        currentPage = clickedValueInt;\n        event.stopPropagation();\n        fetchMovies(currentPage);\n      }\n    }\n  }\n\n  ulPages.addEventListener('click', handlePageClick);\n\n  document\n    .getElementById('library__prev-page')\n    .addEventListener('click', async () => {\n      if (currentPage > 1) {\n        currentPage--;\n        await fetchMovies(parseInt(currentPage));\n        updateCurrentPageText(currentPage);\n      }\n    });\n\n  document\n    .getElementById('library__next-page')\n    .addEventListener('click', async () => {\n      if (currentPage < totalPages) {\n        currentPage++;\n        await fetchMovies(parseInt(currentPage));\n        updateCurrentPageText(parseInt(currentPage));\n      }\n    });\n\n  function updateCurrentPageText() {\n    const currentPageElement = document.getElementById('current-page');\n    currentPageElement.innerText = currentPage;\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$8bbaa4749a5900dd$var$watchedBtn","document","getElementById","$8bbaa4749a5900dd$var$queueBtn","$8bbaa4749a5900dd$var$queueContainer","$8bbaa4749a5900dd$var$ulPages","querySelector","$8bbaa4749a5900dd$var$currentPage","$8bbaa4749a5900dd$var$totalPages","addEventListener","classList","remove","add","queueMoviesList","JSON","parse","localStorage","getItem","fetchPromises","map","movieID","fetch","concat","$8lXr3","API_KEY","then","response","json","fetchMovies","currentPage1","moviesHTML","Promise","all","moviesData","queueMoviesLength","length","Math","ceil","total_pages","li","$dLAzy","generatePages","innerHTML","startIndex","endIndex","min","i","data","release_date","moviePoster","poster_path","genreNames","genres","genre","name","join","movieHTML","id","title","Date","getFullYear","catch","error","console","updateCurrentPageText","innerText","event","target","tagName","clickedValue","clickedValueInt","parseInt","stopPropagation","$parcel$interopDefault","$2TvXO","mark","_callee"],"version":3,"file":"myLibrary.59773a50.js.map"}